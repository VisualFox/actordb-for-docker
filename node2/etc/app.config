[
  {actordb_core,[

    {main_db_folder,"/var/lib/actordb"},
  % {extra_db_folders,["/harddrive2/actordb","/harddrive3/actordb"]},

    % ActorDB uses LMDB storage engine, which requires a max size of database.
    % If in doubt, pick 90% of your HD free space.
    % If using multiple folders, this will limit DB size for every folder.
    % Values can be in TB, GB, MB.
    {max_db_size,"1TB"},

    % Thrift API is the recommended interface
    % https://github.com/biokoda/actordb_thrift/blob/master/adbt.thrift
    % 0 for disable thrift interface.
    {thrift_port,33306},
    % Use framed thrift protocol. If this is enabled actordb_console must be executed with -framed.
    % {thrift_framed, false},

    % Which port to listen to for mysql protocol. 0 for disabled
    {mysql_protocol, 33307},

    % After how much time of inactivity ActorDB will close client connections.
    % 0 means never and will wait for tcp close. 
    %{client_inactivity_timeout, 0},

    % Which network interface thrift/mysql should listen on
    % Default is all interfaces. You should set it to whichever interface you are using.
    % {api_network_interface,"0.0.0.0"},

    % How many transaction managers in node.
    % They are used for transactions over more than one actor but not for writes to a single actor.
    % Higher number means more transaction managers that can work at the same time.
    % Too low the server will not be utilized well enough, too high and it will do too
    % much work at the same time.
    {num_transaction_managers,12},

    % Maximum number of miliseconds to wait for DB queries to complete before they are canceled.
    % Set to 0 for no timeout.
    {query_timeout,10000},

    % safe - Writes will always be synced to disk before replying to client.
    %        Hopefully you are using a HD that actually executes a sync when told to do so.
    %        This has a significant performance impact.
    % interval - in miliseconds. This will issue fsyncs on a timer. A compromise for speed and safety.
    %            ActorDB is a distributed database, in case of a server crash writes will still be
    %            replicated to other nodes, which means the degree of safety is reasonable for a lot of use cases.
    % fast - issue writes as fast as possible, let the OS/hardware decide when to sync. In case of crash, data is
    %        is still replicated to other nodes, so it's not as dangerous as it may sound.
    % If some actors are more important than others, you can add an fsync flag to write queries. Successful write
    % queries with fsync flag are fsynced to disk before replying to client.
    %{fsync, safe},
    {fsync, {interval,1000}},
    %{fsync, fast},

    % Every actor requires replication space.
    % This way if one of the nodes falls behind for whatever reason, they can receive what they missed.
    % Worst case scenario is at least one of the nodes being offline for a longer period of time.
    % These parameters govern how much replication space actors should hold. Once a node is too far behind
    % it will require a full resync of actor.
    % Values are in pages and are per actor. {5000,0.1} means keep max(5000,0.1*ActorSize)
    % of replication space. A page is 4096 bytes, but when stored on disk is actually compressed.
    {max_replication_space, {5000,0.1}}
  ]},

  {bkdcore,[
    % rpcport should not change once ActorDB has been initialized.
    {rpcport,44380},
    {autoload_files,false}
  ]},

  {kernel, [
    {inet_dist_listen_min, 44370},
    {inet_dist_listen_max, 44379}
  ]},

{lager, [
     {crash_log, "/var/log/actordb/crash.log"},
     {error_logger_hwm, 100},
    {handlers, [
      {lager_file_backend, [{size, 10485760},{file, "/var/log/actordb/error.log"}, {level, error}, {formatter, lager_default_formatter},
        {formatter_config, [date, " ", time," [",severity,"] ",pid," ",module, " ",line, " ", message, "\n"]}]},
      {lager_file_backend, [{file, "/var/log/actordb/console.log"}, {level, info}, {size, 10485760}, {formatter, lager_default_formatter}, {formatter_config, [date, " ", time," [",severity,"] ",pid," ",module, " ",line, " ", message, "\n"]}]}
    ]}
  ]},


 %% SASL config
 {sasl, [
         {sasl_error_logger, {file, "/var/log/actordb/sasl-error.log"}},
         {errlog_type, error},
         {error_logger_mf_dir, "/var/log/actordb/sasl"},      % Log directory
         {error_logger_mf_maxbytes, 10485760},   % 10 MB max file size
         {error_logger_mf_maxfiles, 5}           % 5 files max
        ]}
].
